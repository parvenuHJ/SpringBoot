plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.soon'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// JPA - 따로 SQL문을 작성안하고, java 언어로 데이터베이스를 제어할 수 있는 메서드를 가지고 있음
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// thymeleaf - 스프링부트에서는 JSP를 안쓰고 html을 사용하는데, java 언어로 html에 사용할 수 있게 해주는 틀 (EL문법과 비슷 - <$ 자바언어 $> ) => ex) th:text="${board.boardTitle"
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	// validation - 화면에서 전달받은 값을 검증(유효성 검사) 할때 필요한 라이브러리 (ex) 회원정보 입력 다 안하면 회원가입이 안되는 기능)
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	// devtools - 서버 재시작 없이도 클래스 변경시 자동으로 서버가 재가동되게 해줌
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
